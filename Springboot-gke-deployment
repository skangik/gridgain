
-------------------------Get the clone of the repo where the latest code is present ------------------------------------------
git clone -b unleash-optimization https://github.com/PravalKumarWipro/springboot-demo.git

-------------------Build the Spring Boot application using mvn ------------
mvn clean package -DskipTests
sudo docker build  -t  europe-west2-docker.pkg.dev/lbg-coe/demo-repo/springboot-cache-image:git-branch-name .
Pass: unleash4all
User: unleash


------------------Creating a GKE cluste --------------------
gcloud config set compute/region  europe-west2
gcloud config set compute/zone europe-west2-b
gcloud container clusters create demo-cluster \
    --num-nodes=1 \
    --release-channel regular


--------------------Create a Artifact repository in GKE   and make sure to use same name as provided while creating the docker images ------------------

export PROJECT_ID=lbg-coe
echo $PROJECT_ID
gcloud config set project $PROJECT_ID

gcloud artifacts repositories create demo-repo \
   --repository-format=docker \
   --location=europe-west2 \
   --description="Docker repository"

 gcloud artifacts locations list
-------------------project build using mvn------------

mvn clean package -DskipTests
sudo docker build  -t  europe-west2-docker.pkg.dev/lbg-coe/demo-repo/springboot-cache-image:git-branch-name .
docker images

gcloud artifacts repositories add-iam-policy-binding hello-repo \
    --location=europe-west2 \
    --member=serviceAccount:693373143114-compute@developer.gserviceaccount.com \
    --role="roles/artifactregistry.reader"

-------------------Running your container locally (optional----------------
docker run --rm -p 8080:8080 europe-west2-docker.pkg.dev/lbg-coe/hello-repo/hello-app:v1


---------------Pushing the Docker image to Artifact Registry-------------------

gcloud auth configure-docker europe-west2-docker.pkg.dev

docker push europe-west2-docker.pkg.dev/lbg-coe/hello-repo/hello-app:v1

----------------------Deploying the sample app to GKE---------------------------

gcloud container clusters get-credentials demo-cluster --region europe-west2-b
kubectl create -f Redis.yaml -n gke-name-space

